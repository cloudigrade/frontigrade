// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserReducers should handle all defined error types 1`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": true,
    "errorMessage": "MESSAGE",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;

exports[`UserReducers should handle all defined error types 2`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": true,
    "errorMessage": "MESSAGE",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;

exports[`UserReducers should handle all defined error types 3`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": true,
    "errorMessage": "MESSAGE",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;

exports[`UserReducers should handle all defined error types 4`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": true,
    "errorMessage": "MESSAGE",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;

exports[`UserReducers should handle all defined error types 5`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": true,
    "errorMessage": "MESSAGE",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;

exports[`UserReducers should handle all defined pending types 1`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": true,
  },
}
`;

exports[`UserReducers should handle all defined pending types 2`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": true,
  },
}
`;

exports[`UserReducers should handle all defined pending types 3`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": false,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": true,
  },
}
`;

exports[`UserReducers should handle all defined pending types 4`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": true,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;

exports[`UserReducers should handle all defined pending types 5`] = `
Object {
  "session": Object {
    "authorized": false,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "pending": true,
  },
  "user": Object {
    "current": Object {},
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "other": Object {},
    "pending": false,
  },
}
`;
