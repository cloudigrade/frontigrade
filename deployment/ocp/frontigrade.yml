apiVersion: v1
kind: Template
metadata:
  name: frontigrade-persistent-template
labels:
  template: frontigrade-persistent-template
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
      spec:
        containers:
        - name: ${NAME}
          image: ' '
          resources:
            limits:
              memory: 512Mi
          ports:
          - containerPort: 8080
            protocol: TCP
    triggers:
      - type: "ImageChange"
        imageChangeParams:
          automatic: true
          containerNames:
            - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
            namespace: ${NAMESPACE}
      - type: ConfigChange
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${NAME}-build
  spec:
    failedBuildsHistoryLimit: 5
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: ${FRONTIGRADE_GIT_REPO}
        ref: ${FRONTIGRADE_GIT_REPO_BRANCH}
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-build:latest
    strategy:
      dockerStrategy:
        dockerfilePath: deployment/Dockerfile.build
      type: Docker
    triggers:
    - github:
        secret: ${GITHUB_TOKEN}
      type: GitHub
    - generic:
        secret: ${GENERIC_TOKEN}
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${NAME}
  spec:
    failedBuildsHistoryLimit: 5
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: ${FRONTIGRADE_GIT_REPO}
        ref: ${FRONTIGRADE_GIT_REPO_BRANCH}
      images:
        - from:
            kind: ImageStreamTag
            name: ${NAME}-build:latest
          paths:
          - sourcePath: /app/build/
            desitnationDir: /usr/share/nginx/html
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    strategy:
      dockerStrategy:
        dockerfilePath: deployment/Dockerfile
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${NAME}-build
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${NAME}
- kind: Route
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    name: ${NAME}
  spec:
    port:
      targetPort: ${NAME}
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None
- kind: Service
  apiVersion: v1
  metadata:
    name: ${NAME}
  spec:
    ports:
    - name: ${NAME}
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${NAME}
    sessionAffinity: None
    type: ClusterIP
parameters:
# Project Names
- name: NAME
  displayName: Name
  description: "Application Name"
  value: "frontigrade"
  required: true
- name: NAMESPACE
  displayName: Namespace
  description: "Namespace where the application is being deployed"
  value: "cloudigrade-test"
  required: true
# Git Settings
- name: FRONTIGRADE_GIT_REPO
  displayName: Frontigrade Git Repository
  value: "https://github.com/cloudigrade/frontigrade.git"
  required: true
- name: FRONTIGRADE_GIT_REPO_BRANCH
  displayName: Frontigrade Git Repository Branch
  value: "master"
  required: true
- name: GITHUB_TOKEN
  displayName: GitHub Webhook Token
  description: "GitHub Webhook Secret Token for nginx build"
  from: "[\\w]{12}"
  generate: expression
  required: true
- name: GENERIC_TOKEN
  displayName: Generic Webhook Token
  description: "Generic Webhook Secret Token for nginx build"
  from: "[\\w]{12}"
  generate: expression
  required: true
